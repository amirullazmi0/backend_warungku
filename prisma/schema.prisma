// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           String         @id @unique @db.VarChar(100)
  email        String         @unique @db.VarChar(100)
  fullName     String         @unique @db.VarChar(200)
  images       String?        @db.VarChar(255)
  password     String         @db.VarChar(250)
  address      String?        @db.Text()
  accessToken  String?        @db.VarChar(250)
  refreshToken String?        @db.VarChar(250)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  roles        roles          @relation(fields: [rolesName], references: [name])
  rolesName    String         @db.VarChar(255)
  stores       stores[]
  transactions transactions[]

  @@map("users")
}

model roles {
  name      String   @id @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      user[]

  @@map("roles")
}

model stores {
  id          String     @id @unique @db.VarChar(100)
  name        String     @db.VarChar(255)
  desc        String?    @db.Text()
  address     String?    @db.Text()
  logo        String?    @db.VarChar()
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        user       @relation(fields: [userId], references: [id])
  userId      String     @db.VarChar(100)
  itemStore   itemStore? @relation(fields: [itemStoreId], references: [id])
  itemStoreId String?    @db.VarChar(255)

  @@map("stores")
}

model itemStore {
  id           String         @id @unique @db.VarChar(255)
  name         String         @db.VarChar(255)
  total        Int            @db.Integer
  price        Int            @db.Integer
  desc         String?        @db.Text
  images       Json[]         @db.Json
  stores       stores[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  transactions transactions[]

  @@map("itemStores")
}

model transactions {
  id          String    @id @unique @db.VarChar(255)
  total       Int       @db.Integer
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  itemStore   itemStore @relation(fields: [itemStoreId], references: [id])
  itemStoreId String    @db.VarChar(255)
  user        user      @relation(fields: [userId], references: [id])
  userId      String    @db.VarChar(100)

  @@map("transactions")
}
